/*
 * Datamonkey API
 *
 * Datamonkey is a free public server for comparative analysis of sequence alignments using state-of-the-art statistical models. <br> This is the OpenAPI definition for the Datamonkey API.
 *
 * API version: 1.0.0
 * Contact: spond@temple.edu
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"log"

	"github.com/gin-gonic/gin"
)

type HealthAPI struct {
	Scheduler SchedulerInterface
}

// TODO: port should be configurable, in the go app, dockerfile, docker-compose, etc via environment variables

// Get /api/v1/health
// Check health of Datamonkey
func (api *HealthAPI) GetHealth(c *gin.Context) {
	log.Println("Checking health of Datamonkey")

	// Use the scheduler interface to check health
	isHealthy, details, err := api.Scheduler.CheckHealth()
	if err != nil {
		log.Println("Error during health check:", err)
		c.JSON(500, gin.H{"status": "unhealthy", "details": gin.H{"scheduler": "unhealthy", "message": details}})
		return
	}

	if !isHealthy {
		log.Println("Scheduler health check failed:", details)
		c.JSON(500, gin.H{"status": "unhealthy", "details": gin.H{"scheduler": "unhealthy", "message": details}})
		return
	}

	log.Println("Health check passed")
	c.JSON(200, gin.H{"status": "healthy", "details": gin.H{"scheduler": "healthy"}})
}
